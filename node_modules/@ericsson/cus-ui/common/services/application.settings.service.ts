import { Injectable } from '@angular/core';
import { Setting } from '../models/setting.model';

@Injectable()

/**
 * `UserService` is responsible for getting the user profile and
 * auhtorization for the resources
 */
export class ApplicationSettings {

  private _appSettings: any;

  constructor() { }

  /**
   * Getters and setters for application settings
   */
  set settings(settings: any) {
    this.updateSettings(settings);
  }

  get settings() {
    return this._appSettings;
  }

  /**
   * get string value
   */
  getStringValue(key: string): string {
    if (this._appSettings && this._appSettings[key]) {
      return this._appSettings[key];
    }
    return null;
  }

  /**
  * get Int value
  */
  getIntValue(key: string): number {
    if (this._appSettings && this._appSettings[key]) {
      return Number.parseInt(this._appSettings[key]);
    }
    return null;
  }

  /**
  *  get Float value
  */
  getFloatValue(key: string): number {
    if (this._appSettings && this._appSettings[key]) {
      return Number.parseFloat(this._appSettings[key]);
    }
    return null;
  }

  /**
     * Sets the window properties with app settings.
     */
  private updateSettings(settings: Setting) {
    let appSettigs = {};
    if (settings) {
      appSettigs = {
        SESSION_CHECK: settings.sessionCheckInterval,
        AUTO_LOGOUT_WARNING_TIME: settings.autoLogoutWarningTime,
        AUTO_LOGOUT_MIN_TIME: settings.autoLogoutMinTime,
        REALM: settings.realm,
        ERROR_LOG_INTERVAL_SEC: settings.errorLogInterval,
        OP_IFRAME_URL: settings.iFrameUrl ? settings.iFrameUrl : '',
        LOGOUT_URL: settings.logoutUrl,
        HTTP_TIMEOUT_SEC: settings.httpTimeoutSec ? settings.httpTimeoutSec : 30000
      };
    }
    this._appSettings = appSettigs;
  }
}
