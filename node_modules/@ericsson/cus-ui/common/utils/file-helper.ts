export class FileHelper {

    /**
     * Converts the blob into a file and downloads the file.
     * CAUTION !!! Use it only for smaller sized files
     * @param message
     * @param data
     */
    static downloadBlob(data: Blob, fileName: string) {
        let link = document.createElement('a');
        link.href = window.URL.createObjectURL(data);
        link.download = fileName;
        document.body.appendChild(link);
        link.click();
        setTimeout(() => {
            document.body.removeChild(link);
        }, 2000);
    }

    /**
     * Creates a dyncamic form element and executes submit on it
     * @param path Url to download the file from.
     * @param params an object containing the form values.
     * @param method
     */
    static downloadFile(path: string, params, method: string) {
        method = method || 'get';
        let form = document.createElement('form');
        form.setAttribute('method', method);
        if (method && method.toLowerCase() === 'post') {
            form.setAttribute('action', path + '?X-CSRF-Token=' + encodeURIComponent(localStorage.getItem('x-csrf-token')));
        } else {
            form.setAttribute('action', path);
        }
        if (params) {
            Object.keys(params).forEach((key) => {
                if (params && params.hasOwnProperty(key)) {
                    let hiddenField = document.createElement('input');
                    hiddenField.setAttribute('type', 'hidden');
                    hiddenField.setAttribute('name', key);
                    hiddenField.setAttribute('value', params[key]);

                    form.appendChild(hiddenField);
                }
            });
        }
        document.body.appendChild(form);
        form.submit();
        setTimeout(() => {
            document.body.removeChild(form);
        }, 2000);
    }
}
