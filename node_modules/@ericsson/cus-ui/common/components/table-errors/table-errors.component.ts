import { Component, Output, EventEmitter, Input, OnChanges, SimpleChanges } from '@angular/core';
import { ActionItem, ElementOverlayConfig } from '@ericsson/oden/core';
import { ELEMENT_OVERLAY_STATE } from '@ericsson/oden/constants';
import { TranslationService } from '../../../i18n';

@Component({
  selector: 'cus-table-errors',
  templateUrl: './table-errors.component.html'
})

export class TableErrorComponent implements OnChanges {
  @Input() errorText?: string = '';
  @Input() noDataTitle?: string = '';
  @Input() actionType: string;
  private actionItems: Array<any>;

  @Output() onRetryClicked: EventEmitter<null> = new EventEmitter<null>();
  overlayConfig: ElementOverlayConfig = new ElementOverlayConfig();

  constructor(private translate: TranslationService) {

  }

  ngOnChanges(_changes: SimpleChanges) {
    switch (this.actionType) {
      case 'serverError':
      this.actionItems = [new ActionItem({ label: this.translate.instant('com.ericsson.bss.rm.cus.retry'), action: '' })];
        this.setOverlayProperties(ELEMENT_OVERLAY_STATE.ERROR,
          'Server Error',
          this.errorText,
          true,
          this.actionItems);
        break;
      case 'noDataError':
        this.setOverlayProperties(ELEMENT_OVERLAY_STATE.NOTICE,
          'No records available',
          this.errorText,
          true,
          []);
        break;
      case 'noMatchFoundError':
        this.setOverlayProperties(ELEMENT_OVERLAY_STATE.NOTICE,
          'No matching results found',
          this.errorText,
          true,
          []);
        break;
      default:

    }
  }

  /**
    Triggers on click of retry button
   */
  retryCall() {
    this.onRetryClicked.emit();
  }

  /**
   * @param state
   * @param label
   * @param errorTxt
   * @param placeHolder
   * @param actionItem
   * setting overlay properties
   */
  setOverlayProperties(state, label, errorTxt, placeHolder, actionItem) {
    this.overlayConfig.state = state;
    this.overlayConfig.label = label;
    this.overlayConfig.text = errorTxt;
    this.overlayConfig.inlinePlaceholder = placeHolder;
    this.overlayConfig.actions = actionItem;
  }
}

