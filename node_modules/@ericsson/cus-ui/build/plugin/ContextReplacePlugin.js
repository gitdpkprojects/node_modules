/*
Author @Rajeshkumar PR
Plugin to read the compliation asset files
*/
const ReplaceSource = require("./ReplaceContext");
const { ModuleFilenameHelpers } = require('webpack');

class ContextReplacePlugin {
    constructor(options) {
        if (arguments.length > 1)
            throw new Error("ContextReplacePlugin only takes argument (pass an options object)");
        this.options = options || {};
        this.contextPath = options.contextPath;
        this.patternToFind = options.patternToFind;
    }

    apply(compiler) {
        const options = this.options;
        const contextPath = this.contextPath;
        const patternToFind = this.patternToFind;

        compiler.plugin("compilation", (compilation) => {
            compilation.plugin("optimize-chunk-assets", (chunks, callback) => {
                chunks.forEach((chunk) => {
                    if (options.entryOnly && !chunk.isInitial())
                        return;

                    chunk.files
                        .filter(ModuleFilenameHelpers.matchObject.bind(undefined, options))
                        .forEach((file) =>
                            compilation.assets[file] = new ReplaceSource(
                                compilation.assets[file]._source, file, contextPath, patternToFind
                            )
                        );
                });
                callback();
            });
        });
    }
}

module.exports = ContextReplacePlugin;