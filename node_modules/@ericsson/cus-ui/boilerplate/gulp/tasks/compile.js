const gulp = require('gulp');
const Builder = require('systemjs-builder');
const typescript = require('gulp-typescript');
const embedTemplates = require('gulp-angular2-embed-templates');
const embedSass = require('gulp-angular2-embed-sass');
const del = require('del');
const conf = require('../config');

var tsProject = typescript.createProject('./node_modules/@ericsson/cus-ui/boilerplate/tsconfig-systemjs.json');

/* compiling or transpiling ts files to js */
gulp.task('compile', ['compile-oden'], compile);
gulp.task('compile-oden', compileOden);

/* compile ts files of src app to js
   Embed inline templates and styles into ts files
*/
function compile() {
    var tsResult = gulp.src(['src/**/*.ts', '!src/**/*.spec.ts'])
        .pipe(embedTemplates({ minimize: { quotes: true } }))
        .pipe(embedSass())
        .pipe(tsProject());

    return tsResult.js
        .pipe(gulp.dest((conf.path.tmp('compiled'))));
}

/* compile oden ts files to js
   Embed inline templates and styles into ts files
*/
function compileOden() {
    var tsResult = gulp.src(['node_modules/@ericsson/**/*.ts', 'node_modules/@ericsson/cus-ui/boilerplate/system-config.ts', '!node_modules/@ericsson/cus-ui/boilerplate/app/**/*.ts', '!node_modules/@ericsson/cus-ui/build/**/*', '!node_modules/@ericsson/**/*.spec.ts', '!node_modules/@ericsson/**/node_modules/**/*.ts'])
        .pipe(embedTemplates({ minimize: { quotes: true } }))
        .pipe(embedSass())
        .pipe(tsProject());

    return tsResult.js
        .pipe(gulp.dest(conf.path.tmp('compiled/@ericsson')));
}