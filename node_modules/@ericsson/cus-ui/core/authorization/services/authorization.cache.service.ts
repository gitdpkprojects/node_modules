import { Injectable } from '@angular/core';
import { Permission } from '../models';
import { Observable } from 'rxjs';
import { EventService } from '../../../common';

@Injectable()
export class AuthorizationCacheService {
    authDataCache: Permission[] = [];

    constructor(private eventService: EventService) { }

    /**
     * Get TPG Cache Data
     * @param tpgName
     */
    get(tpgName: string): Observable<Permission> {
        let that = this;
        return new Observable<Permission>(observer => {
            if (that.authDataCache[tpgName]) {
                observer.next(that.authDataCache[tpgName]);
            } else {
                let subscriptionId = this.eventService.subscribe('PermissionLoaded', function (data) {
                    if (tpgName === data.tpgName) {
                        observer.next(that.authDataCache[tpgName]);
                        subscriptionId.unsubscribe();
                    }
                });
            }
        });
    }

    /**
     * Set TPG Cache Data
     * @param tpgName
     * @param data
     */
    set(tpgName, data): void {
        this.authDataCache[tpgName] = data;
        this.eventService.publish('PermissionLoaded', { 'tpgName': tpgName });
    }

}
