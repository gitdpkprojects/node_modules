import { Injectable, Inject, InjectionToken } from '@angular/core';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { Observable } from 'rxjs/Observable';
import { WorkflowInstances } from '../models/workflow-instances';
export const WORKFLOW_INSTANCES_URL = new InjectionToken('workflow_instances_url');

@Injectable()
export class WorkflowService {
    constructor(private http: HttpClient,
        @Inject(WORKFLOW_INSTANCES_URL) public workflowInstancesUrl: string) {
    }

    /**
     * Gets All Workflow Instances
     */
    getWorkflowInstances(): Observable<WorkflowInstances[]> {
        return this.http.get<WorkflowInstances[]>(this.workflowInstancesUrl)
            .catch(this.handleError);
    }

    /**
     * Deletes workflow instance/s
     * @param instanceIds
     */
    deleteInstance(instanceIds: string[]): Observable<any> {
        // join array of ids to comma separated string
        let queryInstanceIds = instanceIds.join(',');
        return this.http.delete(`${this.workflowInstancesUrl}?ids=${queryInstanceIds}`)
            .catch(this.handleError);
    }

    /**
     * Error handler which throws error to the subscriber when some
     * error is encountered
     */
    private handleError(error: HttpErrorResponse) {
        return Observable.throw(error);
    }

}
