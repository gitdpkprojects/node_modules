import { CanActivate } from '@angular/router';
import { Injectable } from '@angular/core';
import { DashboardService } from './dashboard.service';
import { Observable } from 'rxjs/Observable';
import { Router } from '@angular/router';
import { MainMenuService, MainMenuRoute } from '@ericsson/oden';
import { NavigationHelper } from '@ericsson/oden/core';

@Injectable()
export class RouterActivationGuard implements CanActivate {
  private routes: any[] = [];
  constructor(private router: Router,
    private dashboardService: DashboardService,
    private odenMainMenuService: MainMenuService) { }


  canActivate() {
    this.odenMainMenuService.onChange.subscribe((routes) => {
      this.routes = routes;
    })
    return new Observable<boolean>((observer) => {
      this.dashboardService.getWidgets().subscribe((data) => {
        if (data && data.length > 0) {
          observer.next(true);
        } else {
          let applicationList = this.extractRoutes();
          if (applicationList && applicationList.length > 0 && applicationList[0].path) {
            let appPath = applicationList[0].path;
            if (NavigationHelper.isInternalURL(appPath)) {
              this.router.navigate([appPath]);
              observer.next(false);
            } else {
              observer.next(true);
            }
          } else {
            observer.next(true);
          }
        }
      });
    });
  }

  private extractRoutes() {
    let routes: MainMenuRoute[] = [];
    this.routes.forEach((item) => {
      if (item && !item.groupName) {
        if (item.applicationName && item.path && item.path !== '/home') {
          routes.push(item);
        }
      } else {
        if (item.children) {
          routes.push(...item.children.filter((appRoute) => appRoute && appRoute.applicationName && appRoute.path));
        }
      }
    });
    return routes;
  }
}
