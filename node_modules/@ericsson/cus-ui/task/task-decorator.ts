/* tslint:disable */
import { TaskModule } from './task.module';
import { TaskConstants } from './task.constants';
import { TaskScreenService } from './task.screen.service';
import { AppHeaderService } from '@ericsson/oden/modules';

export function Task(): ClassDecorator {
  return function (constructor: any) {
    let __taskScreenService: TaskScreenService;
    let __appHeaderService: AppHeaderService;

    // save a reference to the original constructor ngOnInit and taskOnInit
    const ngOnInit = constructor.prototype.ngOnInit;
    const taskOnInit = constructor.prototype.taskOnInit;

    /*
    * Override Init with Task Init
    */
    constructor.prototype.ngOnInit = function (...args) {

      // Based on route determine whether we are in Task Orchestrator or Normal screen mode
      //TODO: get url from route.url
      if (window.location.href.indexOf(`/${TaskConstants.GUIDE_ROUTE_PATH}/`) > -1) {
        __taskScreenService = TaskModule.injector.get(TaskScreenService);
        __appHeaderService = TaskModule.injector.get(AppHeaderService);

        __taskScreenService.currentTaskScreen = this;
        __taskScreenService.currentAppHeaderService = __appHeaderService;
        __taskScreenService.update();
        ngOnInit && ngOnInit.apply(this, args);
        taskOnInit && taskOnInit.call(this);
      } else {
        ngOnInit && ngOnInit.apply(this, args);
      }

    }

    const ngOnDestroy = constructor.prototype.ngOnDestroy;
    const taskOnDestroy = constructor.prototype.taskOnDestroy;

    /*
    * Override OnDestroy with Task Destroy
    */
    constructor.prototype.ngOnDestroy = function (...args) {
      ngOnDestroy && ngOnDestroy.apply(this, args);
      taskOnDestroy && taskOnDestroy.call(this);
    }

  }
}
