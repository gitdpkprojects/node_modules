import { HttpClient } from '@angular/common/http';
import { TranslateLoader } from '@ngx-translate/core';
import * as lodash from 'lodash';
import { Observable } from 'rxjs';

/**
* Custom loader for fetching translation jsons
*/
export class CustomLoader implements TranslateLoader {
    constructor(protected _http: HttpClient,
        protected _prefix: string = 'assets/i18n',
        protected _suffix: string = '.json') { }

    /**
     * Fetches translation json on init and when language has changed
     * @param lang - country code for language ie. sv_SE for Swedish.
     */
    getTranslation(lang: string): Observable<any> {
        const odenTranslations$: Observable<Object> = Observable.of(require('@ericsson/oden/assets/i18n/en-GB.json'))
        const cusTranslations$: Observable<Object> = this._http.get(`${this._prefix}/${lang}${this._suffix}`)

        // Merges CUS translation strings with Oden's.
        return cusTranslations$.combineLatest(odenTranslations$, (odenTranslationStrings, demoTranslationStrings) =>
            lodash.merge(odenTranslationStrings, demoTranslationStrings)
        );

    }
}
