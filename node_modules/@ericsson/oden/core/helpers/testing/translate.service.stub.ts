import { EventEmitter } from '@angular/core';
import { Observable } from 'rxjs';

export class TranslateServiceStub {
    public onTranslationChange: EventEmitter<any> = new EventEmitter<any>();
    public onLangChange: EventEmitter<any> = new EventEmitter<any>();
    public onDefaultLangChange: EventEmitter<any> = new EventEmitter<any>();
    public currentLang = 'en-GB';

    private _setKeys(keys: any) {
        if (keys instanceof Array) {
            const result = {};
            for (let i = 0; i < keys.length; i++) {
                result[keys[i]] = keys[i];
            }
            return result;
        }
        return keys;
    }

    public stream(key: any): any { return Observable.of(this._setKeys(key)); }
    public get(key: any): any { return Observable.of(this._setKeys(key)); }
    public instant(key: any): any { return key; }
}
