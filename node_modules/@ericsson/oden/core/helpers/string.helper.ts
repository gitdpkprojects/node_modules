export class StringHelper {

    /**
     * Returns your input string as regex safe
     * @param str
     */
    static escapeRegExpString(str: string): string {
        return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, '\\$&');
    }

    /**
     * Returns "<span>Hello</span> dear <em>friend</em>" as "Hello dear friend"
     * @param {string} str
     * @returns {string}
     */
    static removeTags(str: string): string {
        const tmp: HTMLDivElement = document.createElement('div');
        tmp.innerHTML = str;
        return tmp.textContent || tmp.innerText;
    }

    /**
     * Removes all non-alphanumeric characters from a string
     * @param {string} str
     * @returns {string}
     */
    static stripNonAlphanumeric(str: string): string {
        return str.replace(/[^a-zA-ZÀ-ÖØ-öø-ÿ0-9\s]+/g, '');
    }

    /**
     * Takes a string and returns initials (Martin Luther King => MLK)
     * @param {string} text
     * @returns {string}
     */
    static stringToInitials(text: string): string {
        const textArray = text.split(' ');
        let initials: string = '';
        textArray.forEach((_text: string) => {
            initials += _text[0];
        });
        return initials;
    }

}
