import { BlockTreeBranch } from './block-tree-branch.model';
import { ActionItem } from './action-item.model';
import { Divider } from './divider.model';
import { UUID } from '../helpers/uuid.class';
import { BlockTreeBranchLeaf } from './block-tree-branch-leaf.model';
import { BlockTreeState } from './block-tree-state.model';

export class BlockTree {
    actions?: Array<ActionItem | Divider> = [];
    children?: Array<BlockTreeBranch | BlockTreeBranchLeaf>;
    filterChildren?: Array<BlockTreeBranch | BlockTreeBranchLeaf>;
    hideRootNode?: boolean;
    id: string = `bt-${UUID.create()}`;
    isDroppable?: boolean = true;
    isExpanded?: boolean = true;
    isSelectable?: boolean = false;
    isSelected?: boolean = false;
    maxChildren?: number = 0; // 0 = unlimited
    selectLabel?: string;
    showItemsCount?: boolean = true;
    switcherValue?: any;
    switchLabels?: Array<String> = [];
    title?: string;
    state: BlockTreeState = new BlockTreeState();
    constructor(obj: Partial<BlockTree> = {}) {
        Object.assign(this, obj);
    }
}
