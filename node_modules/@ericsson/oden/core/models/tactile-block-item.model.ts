import { ActionItem } from './action-item.model';
import { Divider } from './divider.model';
import { UUID } from '../helpers/uuid.class';
import { ITactileBodyInterface } from '../interfaces/tactile-body.interface';

export class TactileBlockItem {
    id: string = UUID.create();
    title: string;
    placeholderTitle?: string;
    subtitle?: string;
    description?: string;
    colorCode?: string; // ie '#f4b600'
    type: Array<string> = [];
    buttonActions?: Array<ActionItem | Divider>;
    menuActions?: Array<ActionItem | Divider>;
    persist: boolean = false;
    data: any;
    draggableItem?: any; // needed in conjunction with ie BlockTree
    disabled?: boolean = false;
    selectable?: boolean = false;
    tooltip?: string = null;
    childComponent?: ITactileBodyInterface | any; // Expects a Type - not an instance
    libraryChildComponent?: ITactileBodyInterface | any; // Expects a Type - not an instance
    selectLabel?: string = 'Edit';
    icon?: string;
    iconTooltip?: string;
    libraryMenuActions?: Array<ActionItem | Divider>;
    subtype?: string;
    humanReadableId?: string;
    modifiedDate?: Date;

    constructor(obj: {
        id?: string;
        title?: string;
        placeholderTitle?: string;
        subtitle?: string;
        description?: string;
        colorCode?: string;
        type?: Array<string>;
        buttonActions?: Array<ActionItem | Divider>;
        menuActions?: Array<ActionItem | Divider>;
        persist?: boolean;
        data?: any;
        draggableItem?: any;
        disabled?: boolean;
        selectable?: boolean;
        tooltip?: string;
        childComponent?: ITactileBodyInterface | any;
        libraryChildComponent?: ITactileBodyInterface | any;
        selectLabel?: string;
        icon?: string;
        iconTooltip?: string;
        libraryMenuActions?: Array<ActionItem | Divider>;
        subtype?: string;
        humanReadableId?: string;
        modifiedDate?: Date;
    } = {}) {
        Object.assign(this, obj);
    }
}
