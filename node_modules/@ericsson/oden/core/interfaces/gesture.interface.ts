export interface IHammerInput {
    preventDefault: () => {};
    deltaX: number;
    deltaY: number;
    center: { x: number; y: number; };
}

export interface IHammerStatic {
    Pan: IRecognizer;
    Swipe: IRecognizer;
    Press: IRecognizer;
    new(element: HTMLElement | SVGElement, options?: any): IHammerManager;
}

export interface IRecognizer {
    new(options?: any): IRecognizer;
    recognizeWith(otherRecognizer: IRecognizer | string): IRecognizer;
}

export interface IRecognizerStatic {
    new(options?: any): IRecognizer;
}

export interface IHammerInstance {
    on(eventName: string, callback: Function): void;
    off(eventName: string, callback: Function): void;
}

export interface IHammerManager {
    add(recogniser: IRecognizer | IRecognizer[]): IRecognizer;
    set(options: any): IHammerManager;
    emit(event: string, data: any): void;
    off(events: string, handler?: Function): void;
    on(events: string, handler: Function): void;
}
