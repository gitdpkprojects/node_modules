@import "../core";

/** Checkboxes */

.cui-checkbox[type="checkbox"]:not(:checked),
.cui-checkbox[type="checkbox"]:checked,
.oden-checkbox[type="checkbox"]:not(:checked),
.oden-checkbox[type="checkbox"]:checked {
    position: absolute;
    left: -9999px;
    opacity: 0;
}

.cui-checkbox[type="checkbox"], .oden-checkbox[type="checkbox"] {
    + label {
        position: relative;
        padding-top: 8px;
        padding-left: 32px;
        cursor: pointer;
        display: inline-block;
        height: 32px;
        font-size: 13px;
        margin-bottom: 24px;
        line-height: 20px;
        vertical-align: middle;
        @include text-selection(none);
        @include theming(color, base-color, $opaque-75);
        & > .oden-form-field > input {
            &:placeholder-shown:not(:focus)::-webkit-input-placeholder {
                opacity: 1;
            }
            &:not(:focus)::-ms-input-placeholder {
                opacity: 1;
            }
        }
        &.next-to-input, &.next-to-textarea {
            height: auto;
            width: 100%;
            .field-group:last-child,
            .oden-form-field:last-child {
                margin-bottom: 0;
            }
            &:before, &:after {
                top: 8px;
            }
        }
        & + .cui-info-button, & + .cui-icon {
            margin-top: -24px;
        }
        &.required:not(:empty):after {
            content: '' !important;
        }
        &:before, &:after {
            content: '';
            position: absolute;
        }
        &:after {
            border-radius: 1px;
        }
    }
    &:disabled, &.disabled {
        + label {
            @include theming(color, base-color, $opaque-40);
            cursor: default;
        }
    }
    &[readonly], &:read-only {
         + label {
            pointer-events: none;
            @include theming(color, base-color, $opaque-75);
            cursor: default;
        }
    }
    &:not(.indeterminate) {
        + label {
            &:before, &:after {
                transition: width .3s .1s, height .3s .1s, top .3s .1s,  left .3s .1s, border .1s .1s, box-shadow .2s .1s;
            }
            &:before {
                top: 17px;
                left: 12px;
                width: 0px;
                height: 0px;
                border: 2px solid transparent;
                @include transform(rotateZ(37deg));
                transform-origin: 100% 100%;
                z-index: -1;
            }
            &:after {
                top: 9px;
                left: 9px;
                width: 14px;
                height: 14px;
                background-color: transparent;
                @include theming(border, (1px, solid, base-color), $opaque-75);
                @include transform(scale(1));
                z-index: 0;
            }
        }
        &:disabled, &.disabled {
            + label:after {
                @include theming(border-color, base-color, $opaque-40);
            }
        }
        &[readonly], &:read-only {
            + label {
                padding-left: 0;
                &:before {
                    display: none;
                }
                &:after {
                    display: none;
                }
            }
            &:not(:checked) + label {
                display: none;
            }
        }
        &.ng-invalid + label:after {
            @include theming(border-color, status-major);
        }
        &:checked {
            + label {
                &:before {
                    top: 10px;
                    left: 10px;
                    width: 2px;
                    height: 7px;
                    @include theming(border-right, (2px, solid, base-color-light));
                    @include theming(border-bottom, (2px, solid, base-color-light));
                    z-index: 1;
                }
                &:after {
                    width: 14px;
                    height: 14px;
                    @include theming(background-color, brand-primary);
                    @include theming(border-color, brand-primary);
                }
            }
            &.ng-invalid + label:after {
                @include theming(background-color, status-major);
                @include theming(border-color, status-major);
            }
            &:disabled, &.disabled {
                + label:after {
                    @include theming(background-color, base-color, $opaque-40);
                    border-color: transparent;
                }
            }
            &[readonly], &:read-only {
                display: inline-block;
            }
        }
    }
    &.indeterminate {
        + label {
            &:before {
                transition: background-color .1s .1s box-shadow .2s .1s;
                top: 12px;
                left: 12px;
                width: 10px;
                height: 10px;
                @include theming(background-color, brand-primary);
            }
            &:after {
                transition: background-color .1s .1s, border .1s .1s, box-shadow .2s .1s;
                top: 9px;
                left: 9px;
                width: 14px;
                height: 14px;
                @include theming(border, (1px, solid, base-color), $opaque-75);
            }
        }
        &:disabled, &.disabled {
            + label {
                &:before {
                    @include theming(background-color, base-color, $opaque-40);
                }
                &:after {
                    @include theming(border-color, base-color, $opaque-40);
                }
            }
        }
        &[readonly], &:read-only {
            + label {
                &:before {
                    @include theming(background-color, base-color, $opaque-75);
                }
                &:after {
                    @include theming(border-color, base-color, $opaque-75);
                }
            }
        }
    }
    &:not(:disabled):not(.disabled):not([readonly]):not(:read-only) {
        &:active {
            + label:after {
                @include theming(border-color, brand-primary);
                @include theming(box-shadow, (0, 0, 0, 8px, brand-primary), $opaque-20);
            }
            &.ng-invalid + label:after {
                @include theming(border-color, status-major);
                @include theming(box-shadow, (0, 0, 0, 8px, status-major), $opaque-20);
            }
        }
        &.tabbed-focus, &.tabbed:focus, &:focus {
            + label:after {
                @include theming(box-shadow, (0, 0, 0, 4px, brand-primary), $opaque-20);
            }
            &.ng-invalid + label:after {
                @include theming(box-shadow, (0, 0, 0, 4px, status-major), $opaque-20);
            }
        }
    }
}

.tight-group .oden-checkbox[type="checkbox"] + label {
    & + .cui-info-button, & + .cui-icon {
        margin-top: 2px;
    }
}
