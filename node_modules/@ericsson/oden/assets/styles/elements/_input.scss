@import '../core';
input.cui-input, textarea.cui-textarea, input.cui-input-search, textarea.oden-textarea, input.oden-input, textarea.oden-textarea-resize  {
    font-size: 13px;
    min-height: 29px;
    padding: 0;
    border: none;
    outline: none;
    margin: 18px 0 0 0;
    line-height: 16px;
    vertical-align: middle;
    background: transparent;
    border-radius: 0;
    transition: $trans-border-color;
    max-width: 100%;
    box-shadow: none !important;
    -moz-appearance: textfield;
    @include theming(border-bottom, (1px, solid, base-color), $opaque-20);
    @include theming(color, base-color);
    &::-webkit-inner-spin-button, &::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
    &:hover {
        @include theming(border-bottom-color, base-color, $opaque-75);
    }
    &:not([size]) {
        width: 100%;
    }
    &:disabled, &:read-only {
        border-bottom-color: transparent;
    }
    &:focus:not(:read-only):not(.locked-state) {
        @include theming(border-color, brand-primary);
    }
    &:disabled {
        @include theming(color, base-color, $opaque-40);
    }
    &:read-only {
        @include theming(color, base-color);
    }
    &.ng-invalid.ng-touched, &.ng-invalid.has-value, &.error,
    .cui-date-input.ng-invalid.ng-touched &, .cui-date-input.ng-invalid.has-value &,
    .cui-date-time-input.ng-invalid.ng-touched &, .cui-date-time-input.ng-invalid.has-value &,
    .cui-time-input.ng-invalid.ng-touched &, .cui-time-input.ng-invalid.has-value & {
        @include theming(border-color, status-major);
        &:focus:not(:read-only) {
            @include theming(border-color, status-major);
        }
    }
    &:placeholder-shown:not(.locked-state):not(:focus)::-webkit-input-placeholder {
        opacity: 0;
    }
    &:not(:focus)::-ms-input-placeholder:not(.locked-state)::-ms-input-placeholder {
        opacity: 0;
    }
    &::-moz-placeholder:not(.locked-state) {
        opacity: 0;
        transition: $trans-fade-in;
        transition-delay: 100ms;
        // Show placeholder when inside label (for radio inputs)
        label & {
            opacity: 1;
        }
    }
    &:active::-moz-placeholder, &:focus::-moz-placeholder {
        opacity: 1;
        transition: $trans-fade-in;
        transition-delay: 100ms;
    }
    &:not(.has-value) {
        &:disabled, &:read-only {
            opacity: 0;
            min-height: 0;
            margin: 0;
            height: 0!important;
            + label {
                overflow: visible;
                position: static;
                display: inline-block;
                margin-top: 9px;
                margin-bottom: 9px;
                &:before {
                    content: attr(undefinedMessage);
                    @include theming(color, status-major, $opaque-40);
                    display: block;
                    font-size: 13px;
                    position: absolute;
                    top: 23px;
                }
            }
        }
        &:disabled + label:before {
            @include theming(color, base-color, $opaque-40);
        }
        &:read-only + label:before {
            @include theming(color, base-color);
        }
    }
    &:placeholder-shown:focus::-webkit-input-placeholder {
        transition: $trans-fade-in;
        transition-delay: 100ms;
    }
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
        /* IE10+ CSS styles go here */
        /* TODO: Check so placeholder is really shown */
        &:-ms-input-placeholder {
            color: transparent;
        }
        &:active:-ms-input-placeholder, &:focus:-ms-input-placeholder {
            @include theming(color, base-color, $opaque-40);
        }
        &[placeholder]:focus:-ms-input-placeholder {
            transition: $trans-color;
            transition-delay: 100ms;
        }
    }
    + label {
        position: absolute;
        left: 0;
        cursor: text;
        top: 24px;
        font-size: 13px;
        opacity: 1;
        pointer-events: none;
        overflow: hidden;
        word-break: break-all;
        text-overflow: ellipsis;
        white-space: nowrap;
        width: 100%;
        transition: $trans-font-size, $trans-translateYX, $trans-fade-in;
        @include theming(color, base-color, $opaque-40);
        + .inline-icon {
            display: block;
            cursor: pointer;
            position: absolute;
            height: 16px;
            width: 16px;
            right: 8px;
            top: 24px;
            opacity: 0.55;
            &:hover{
                opacity: 1;
            }
        }
        &.oden-label {
            pointer-events: all;
            width: auto;
            @include text-selection(none);
        }
    }
    &.icon-blur {
        + label {
            + .inline-icon {
                display: none;
            }
        }
    }
    &:focus + label, + label.active,
    &.locked-state + label,
    &.has-value + label,
    &:disabled:not(.has-value) + label,
    &:read-only:not(.has-value) + label,
    .cui-radio + label & + label {
        font-size: 11px;
        @include transform(translateY(-175%));
        .cui-list-controller & {
            display: none;
        }
    }
    &.no-transition, &.no-transition + label {
        transition-duration: 0s;
    }
    &:focus:not(:read-only):not(.locked-state) + label, + label.active {
        @include theming(color, brand-primary);
        @include theming(border-bottom-color, base-color, $opaque-75);
    }
    &:focus:not(:read-only) + label, + label.active , &.has-value + label {
        opacity: 1;
        cursor: initial;
    }
    &.ng-invalid.has-value:not(:focus) + label,
    &.ng-invalid.ng-touched:not(:focus) + label.active,
    &.error:not(:focus) + label {
        @include theming(color, status-major);
    }
    .cui-date-input.ng-invalid.has-value &,
    .cui-date-time-input.ng-invalid.has-value &,
    .cui-time-input.ng-invalid.has-value & {
        &:not(:focus) + label {
            @include theming(color, status-major);
        }
    }
    .cui-date-input.ng-invalid.ng-touched &,
    .cui-date-time-input.ng-invalid.ng-touched &,
    .cui-time-input.ng-invalid.ng-touched & {
        &:not(:focus) + label.active {
            @include theming(color, status-major);
        }
    }
    // special styling for input fields inside a radiobutton's label
    .cui-radio + label & {
        &:placeholder-shown:not(:focus)::-webkit-input-placeholder {
            opacity: 1;
        }
        &:not(:focus)::-moz-placeholder {
            @include theming(color, status-major, $opaque-40);
        }
        @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
            /* IE10+ CSS styles go here */
            /* TODO: Check so placeholder is really shown */
            &[placeholder]:not(:focus):-ms-input-placeholder {
                @include theming(color, status-major, $opaque-40);
            }
        }
    }
    .cui-radio + label > & {
        margin-top: -6px;
        + label + .inline-icon {
            top: 10px;
        }
    }
    &::-ms-clear {
        display: none;
    }
    &.has-icon {
        padding-right: 30px;
    }
    &.cui-input-search {
      padding-right: 24px;
        + label + span.clear-search {
            display: none;
        }
        &.has-value {
            + label + span.clear-search {
                @include clear-icon();
            }
        }
    }
}
label > .oden-form-field > textarea.oden-textarea,
label > .oden-form-field > input.oden-input {
    margin-top: -6px;
}
// When a cui-button is placed inside a field-group, we adding "padding" to the input.
.cui-info-button {
    + input.cui-input, + .cui-select, + label + .cui-select,
    + textarea.cui-textarea, + textarea.oden-textarea,
    + input.cui-input-search, + input + label {
        width: calc(100% - 27px);
        max-width: calc(100% - 27px);
    }
}
// Forms 2 doesn't allow you to set undefinedMessage
textarea.oden-textarea, input.oden-input {
    &:not(.has-value):disabled, &:not(.has-value):read-only {
        + label:before {
            content: "-";
        }
    }
}
