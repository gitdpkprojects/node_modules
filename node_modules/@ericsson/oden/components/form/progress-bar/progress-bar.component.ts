import { Component, Input, ViewEncapsulation, HostBinding, Renderer2, OnChanges, SimpleChanges } from '@angular/core';

@Component({
    selector: 'cui-progress',
    templateUrl: 'progress-bar.component.html',
    styleUrls: ['progress-bar.component.scss'],
    encapsulation: ViewEncapsulation.None
})
export class ProgressBarComponent implements OnChanges {
    @Input() current: number = 0;
    progressWithoutUnit: number = 0;
    progresssPercentage: string = '';
    /* @deprecated Use current instead */
    @Input() set progress(progress: number) {
        this.current = progress;
    }
    get progress() {
        return this.current;
    }
    @Input() max: number = 100;

    @Input() unit: string = '';

    @Input() title: string;
    @Input() subtitle: string = '';
    @Input() showTitle: boolean = true;

    @HostBinding('class.cui-progress') addClass: boolean = true;

    constructor(public renderer: Renderer2) {
        this.progressWithoutUnit = this.getProgressPercentWithoutUnit();
        this.progresssPercentage = this.getProgressPercentage();
    }

    ngOnChanges(changes: SimpleChanges): void {
        if (changes['current'] || changes['max'] || changes['progress']) {
            this.progressWithoutUnit = this.getProgressPercentWithoutUnit();
            this.progresssPercentage = this.getProgressPercentage();
        }
    }

    /**
     * Returns progress in percentage formatted string
     * @returns {string} - progress %
     */
    getProgressPercentage(): string {
        let progress: number;
        if ( this.current > 0) {
            progress = Math.floor(this.current);
        }
        if (progress > 100) {
            progress = 100;
        }
        return progress + '%';
    }
    getProgressPercentWithoutUnit(): number {
        let percentage = 0;
        if ( this.current > 0 && this.max > 0 ) {
            percentage  = (this.current / this.max) * 100;
        }
        if ( percentage > 100) {
            percentage = 100;
        }
        return Math.floor(percentage);
    }
}
