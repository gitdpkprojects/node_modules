import {
    AfterViewInit,
    Component,
    ElementRef,
    HostBinding,
    Input,
    OnChanges,
    Renderer2,
    SimpleChanges,
    ViewEncapsulation,
} from '@angular/core';
import { TranslateService } from '@ngx-translate/core';

@Component({
    selector: 'cui-period-picker',
    templateUrl: 'period-picker.component.html',
    styleUrls: ['period-picker.component.scss'],
    encapsulation: ViewEncapsulation.None
})
export class PeriodPickerComponent implements AfterViewInit, OnChanges {
    @HostBinding('class.cui-period-picker') addClass: boolean = true;

    @Input() label: string = 'to';
    defaultLabel: string;
    span: HTMLElement;

    constructor(private _element: ElementRef, private _renderer: Renderer2, translate: TranslateService) {
        translate.stream([
            'ODEN.COMMON.TO'
        ]).subscribe(res => {
            this.defaultLabel = res['ODEN.COMMON.TO'];
            this._setSpanValue();
        });
    }

    private _setSpanValue() {
        if (this.span) {
            this.span.innerHTML = this.label || this.defaultLabel;
        }
    }

    ngOnChanges(change: SimpleChanges) {
        if (change['label']) {
            this._setSpanValue();
        }
    }

    /**
     * Insert the label between the two components.
     */
    ngAfterViewInit(): void {
        // in case the 'label' passed is undefined or null
        if (!this.label) {
            this.label = 'to';
        }
        const children = this._element.nativeElement.querySelectorAll('.cui-date-component');
        if (children.length === 2) {
            this.span = this._renderer.createElement('span');
            this._renderer.addClass(this.span, 'delimiter');
            this._setSpanValue();
            this._renderer.insertBefore(
                this._element.nativeElement,
                this.span,
                this._element.nativeElement.querySelectorAll('.cui-date-component')[1]);
        } else {
            console.warn(`<cui-period-picker> requires exactly 2 date components inside it, found ${children.length}.`);
        }
    }
}
