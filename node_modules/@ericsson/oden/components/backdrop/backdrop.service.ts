import {Injectable, ComponentFactoryResolver, ComponentRef, ComponentFactory} from '@angular/core';
import { BackdropComponent } from './backdrop.component';
import { OverlayService, OVERLAY_CONTEXT } from '../overlay/';

@Injectable()
export class BackdropService {
    private _backdrops: ComponentRef<BackdropComponent>[] = [];

    constructor(private _componentFactoryResolver: ComponentFactoryResolver,
                private _overlayService: OverlayService) {}

    /**
     * Creates and returns a backdrop container ref into overlay container ref.
     * @return {ComponentRef<BackdropComponent>}
     */
    create(visibleBackdrop = true, overlay: OVERLAY_CONTEXT = OVERLAY_CONTEXT.ROOT): ComponentRef<BackdropComponent> {
        let factory: ComponentFactory<BackdropComponent>;
        factory = this._componentFactoryResolver.resolveComponentFactory(BackdropComponent);


        const backdrop = this._overlayService.getOverlay(overlay).createComponent(factory);

        backdrop.instance.isHidden = !visibleBackdrop;
        backdrop.instance.zIndex = this._overlayService.zIndex;

        this._backdrops.push(backdrop);

        return backdrop;
    }

    /**
     * Returns the index of backdrop in the overlay container ref.
     * @param backdrop
     * @param overlay
     * @return {number}
     * @private
     */
    private _getOverlayIndex(backdrop: ComponentRef<BackdropComponent>,
                             overlay: OVERLAY_CONTEXT = OVERLAY_CONTEXT.ROOT): number {
        return this._overlayService.getOverlay(overlay).indexOf(backdrop.hostView);
    }

    /**
     * Removes backdrop from overlay container
     * @param backdrop
     * @param overlay
     */
    remove(backdrop: ComponentRef<BackdropComponent>,  overlay: OVERLAY_CONTEXT = OVERLAY_CONTEXT.ROOT): void {
        this._overlayService.getOverlay(overlay).remove(
            this._getOverlayIndex(backdrop, overlay)
        );
        const index = this._backdrops.indexOf(backdrop);
        if (index > -1) {
            this._backdrops.splice(index, 1);
        }
    }
}
