@import "../../assets/styles/core";

$button-base-color: base-color;
$button-base-color-inverted: base-color-inverted;

$activeTint: $tint-10;
$hoverTint: $tint-20;

.cui-button-wrapper {
    display: inline-block;
    margin: 4px;
    .cui-button {
        margin: 0;
        max-width: 100%;
    }
}

.cui-button {
    max-width: calc(100% - 4px);
    white-space: nowrap;
    text-overflow: ellipsis;
    border-radius: 3px;
    text-align: center;
    display: inline-block;
    padding: 6px 16px;
    cursor: pointer;
    outline: none;
    background: transparent;
    border: 1px solid;
    vertical-align: middle;
    position: relative;
    margin: 4px;
    overflow: hidden;
    transition: $trans-bg, $trans-color, $trans-border-color, $trans-fade-in;
    transition-duration: $dur2;
    @include theming-tint(border-color, $button-base-color, $tint-20);
    @include theming-tint(color, $button-base-color, $tint-20);
    &::-moz-focus-inner {
        margin-top: -2px;
    }
    span {
        display: inline-block;
        max-width: 100%;
        font-size: $font-size-small;
    }
    .cui-icon {
        margin: 0 0 0 -4px;
        font-size: 25px;
        position: absolute;
        &.next-to-text {
            margin-left: -9px;
        }
        + span {
            margin-left: 13px;
        }
    }
    &.small  {
        padding: 3px 8px 4px 8px;
        span {
            font-size: $font-size-smaller;
        }
        .cui-icon {
            margin: 3px 0 0 -2px;
            font-size: 18px;
            &:not(.next-to-text) {
                margin-left: 0;
            }
        }
    }
    &:hover:not([disabled]),&.cui-button-focus:not([disabled]) {
        border: 1px solid;
        @include theming-tint(background-color, $button-base-color, $hoverTint);
        @include theming-tint(border-color, $button-base-color, $hoverTint);
        @include theming(color, $button-base-color-inverted);
    }
    &:active:not([disabled]) {
        border: 1px solid;
        @include theming-tint(background-color, $button-base-color, $activeTint);
        @include theming-tint(border-color, $button-base-color, $activeTint);
        @include theming(color, $button-base-color-inverted);
    }
    &[disabled] {
        opacity: $disabled;
        cursor: not-allowed;
    }
    &.primary {
        @include theming(color, $button-base-color-inverted);
        @include theming(border-color, brand-primary);
        @include theming(background-color, brand-primary);

        &:not(:disabled) {
            &:hover, &.cui-button-focus {
                border: 1px solid;
                @include theming-tint(border-color, brand-primary, $tint-17);
                @include theming-tint(background-color, brand-primary, $tint-17);
            }
            &:active {
                border: 1px solid;
                @include theming-shade(background-color, brand-primary, $tint-33);
                @include theming-shade(border-color, brand-primary, $tint-33);
            }
        }
    }
    &.inverted {
        @include theming-shade(border-color, $button-base-color-inverted, $tint-10);
        @include theming(color, $button-base-color-inverted);
        &:hover:not([disabled]),&.cui-button-focus:not([disabled]) {
            @include theming-shade(background-color, $button-base-color-inverted, $tint-10);
            @include theming-shade(border-color, $button-base-color-inverted, $tint-10, 0);
            @include theming(color);
        }
        &:active:not([disabled]) {
            @include theming-shade(background-color, $button-base-color-inverted, $tint-20);
            @include theming-shade(border-color, $button-base-color-inverted, $tint-20, 0);
            @include theming-shade(color);
        }
    }
    &.discard {
        @include theming-tint(background-color, $button-base-color, $hoverTint, .05);
        @include theming-tint(border-color, $button-base-color, $hoverTint, 0);
        @include theming(color);
        &:not([disabled]) {
            &:hover, &.cui-button-focus {
                @include theming-tint(background-color, $button-base-color, $hoverTint, .2);
                @include theming-tint(border-color, $button-base-color, $hoverTint, 0);
                @include theming(color);
            }
            &:active {
                @include theming-tint(background-color, $button-base-color, $activeTint, .4);
                @include theming-tint(border-color, $button-base-color, $activeTint, 0);
                @include theming(color);
            }
        }
    }
    &.save {
        @include theming(color, base-color-inverted);
        @include theming(background-color, status-ok);
        @include theming(border-color, status-ok);
        .cui-icon:before {
            // Checkmars gets the color green by icons.scss, this overwrites that value to 
            // base-color instead.
            @include theming(color, base-color-inverted);
        }

        &:hover:not([disabled]),&.cui-button-focus:not([disabled]) {
            @include theming(color, base-color-inverted);
            @include theming-tint(background-color, status-ok, $tint-20);
            @include theming-tint(border-color, status-ok, $tint-20);
        }
        &:active:not([disabled]) {
            @include theming(color, base-color-inverted);
            @include theming-shade(background-color, status-ok, $tint-20);
            @include theming-shade(border-color, status-ok, $tint-20);
        }
    }
    &.align-right {
        direction: rtl;
        .cui-icon {
            margin-right: -21px;
            + span {
                margin-left: 0;
                margin-right: 13px;
                direction: ltr;
            }
        }
    }
}
.ripple-effect {
    position: absolute;
    width: 10px;
    height: 10px;
    border-radius: 5px;
    opacity: 0;
    @include transform(translate(-50%, -50%));
    @include theming(background-color, $button-base-color-inverted);
    animation: ripple-animation 2s;
    transition-timing-function: $ease-sharp;
}

@include keyframes(ripple-animation) {
    from {
        opacity: 0.25;
    }
    to {
        @include transform(scale(50));
        opacity: 0.0;
    }
}

.cui-universal-layer {
    .cui-button {
        background: none!important;
    }
}
