import { Ref, RelationGraphType } from '../relation-graph.model';

export class RelationGraphComponentType {
    private _acronym: string = null;

    constructor(public readonly ref: Ref, public readonly type: RelationGraphType) { }

    get name(): string {
        return this.type.name;
    }

    get acronym(): string {
        if (this._acronym === null) {
            this._acronym = this.type.acronym || this.generateAcronym();
        }
        return this._acronym;
    }

    private generateAcronym(): string {
        const isCamelCase = !!this.type.name.match(/[A-Z]/g) && !!this.type.name.match(/[a-z]/g);
        if (isCamelCase) {
            return this.generateAcronymFromCamelCase();
        } else {
            if (this.type.name.indexOf('_') >= 0) {
                return this.generateAcronymFromWords('_');
            } else if (this.type.name.indexOf('-') >= 0) {
                return this.generateAcronymFromWords('-');
            } else {
                return this.generateAcronymFromWords(' ');
            }
        }
    }

    private generateAcronymFromCamelCase(): string {
        return this.type.name.replace(/[^A-Z]/g, '');
    }

    private generateAcronymFromWords(separator: string): string {
        return this.type.name.split(separator)
            .map(w => w.trim())
            .filter(w => w.length >= 1)
            .map(w => w.substr(0, 1).toUpperCase())
            .join('');
    }
}
