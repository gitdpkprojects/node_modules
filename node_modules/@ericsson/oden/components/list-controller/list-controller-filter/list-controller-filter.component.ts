import {
    Component, EventEmitter, HostBinding, Input, OnInit, Output,
    ViewEncapsulation
} from '@angular/core';
import { UUID } from '../../../core/helpers/uuid.class';

@Component({
    selector: 'cui-list-controller-filter',
    templateUrl: 'list-controller-filter.component.html',
    styleUrls: ['list-controller-filter.component.scss'],
    encapsulation: ViewEncapsulation.None
})

export class ListControllerFilterComponent implements OnInit {
    @Input() placeholder: string = '';
    @Input() id: string;
    @Input() value: string = '';

    @Output() onFilterChange: EventEmitter<string> = new EventEmitter<string>();

    @HostBinding('class.cui-list-controller-filter')
    @HostBinding('class.cui-list-controller-component')
    addClass: boolean = true;

    listControllerFilterId: string = 'cui-list-controller-filter-id-' + UUID.create();

    constructor() {}

    ngOnInit(): void {
        if (this.value !== '') {
            Promise.resolve().then(() => {
                this.onFilterChange.emit(this.value);
            });
        }
    }

    onChanges(value: any): void {
        this.onFilterChange.emit(value);
    }
}
