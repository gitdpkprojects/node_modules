import { Component, HostBinding, Input, ViewEncapsulation, OnInit } from '@angular/core';
import { WhitelabelService } from '../../../core/services/whitelabel.service';
import { COLORWHITELABEL } from '../../../core/constants/color.whitelabel';
import { UnSub } from '../../../core/classes';
import { Subscription } from 'rxjs';

@Component({
    selector: 'cui-rule-event',
    templateUrl: 'rule-event.component.html',
    styleUrls: [ 'rule-event.component.scss' ],
    encapsulation: ViewEncapsulation.None
})
@UnSub()
export class RuleEventComponent implements OnInit {
    private _subscriptions: Subscription[] = [];
    @HostBinding('class.cui-rule-event') addClass: boolean = true;
    @Input() set color(color: string) {
        if ( color) {
            this._color = color;
        }
        this._getWhitelabel();
    }
    get color(): string {
        return this._color;
    }

    @Input() label: string;
    @Input() description?: string = '';
    private _color: string = '';
    constructor(private _whitelabelService: WhitelabelService) {
    }
    ngOnInit() {
        this._getWhitelabel();
        this._subscriptions.push(this._whitelabelService._whitelabelingLoaded.subscribe(() => {
            this._getWhitelabel();
        }));
    }

    private _getWhitelabel() {
        if (!this._color) {
            this._color = this._whitelabelService.getPropertyValue(COLORWHITELABEL.BASE_COLOR);
        }
    }
}
