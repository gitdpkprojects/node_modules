import { Directive,  HostBinding, Input, OnChanges, SimpleChanges, AfterViewInit } from '@angular/core';
import { OdenTextInputBaseDirective } from '../oden-form-base-classes/oden-text-input-base-directive';

export const enum TEXTAREA_TYPE {
    WORD_WRAP = 'wordwrap',
    RESIZE = 'resize'
}

@Directive({
    selector: '[oden-textarea]'
})
export class OdenTextareaDirective extends OdenTextInputBaseDirective implements AfterViewInit, OnChanges {
    private _lastHeight: number = 0;
    @HostBinding('class.oden-textarea') _hasOdenTextareaClass: boolean = true;
    @HostBinding('class.oden-textarea-resize') _hasOdenTextareaResizeClass: boolean = false;
    @HostBinding('attr.rows') @Input() rows: string | number = 1;
    @Input() type: TEXTAREA_TYPE = TEXTAREA_TYPE.WORD_WRAP;

    ngAfterViewInit(): void {
        super.ngAfterViewInit();
        this._subscriptions.push(this._formService._inputValue.subscribe(() => this._updateHeight()));
        this._updateTypeStyles();
    }

    ngOnChanges(simpleChanges: SimpleChanges) {
        super.ngOnChanges(simpleChanges);
        if (simpleChanges['type']) {
            this._updateTypeStyles();
        }
    }

    private _updateTypeStyles() {
        if (this.type === TEXTAREA_TYPE.WORD_WRAP) {
            this._hasOdenTextareaClass = true;
            this._hasOdenTextareaResizeClass = false;
            this._updateHeight();
        } else if (this.type === TEXTAREA_TYPE.RESIZE) {
            this._hasOdenTextareaClass = false;
            this._hasOdenTextareaResizeClass = true;
            this.rows = 3;
        }
    }

    private _updateHeight() {
        if (this.type === TEXTAREA_TYPE.WORD_WRAP &&
            this._elementRef && this._elementRef.nativeElement) {
            const height = this._elementRef.nativeElement.scrollHeight;
            if (this._lastHeight !== height) {
                this._elementRef.nativeElement.style.height = 0;
                this._elementRef.nativeElement.style.height = this._elementRef.nativeElement.scrollHeight + 'px';
                this._lastHeight = height;
            }
        }
    }
}
