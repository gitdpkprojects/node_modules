import { Directive, HostBinding, EventEmitter, Output, Input, AfterViewInit } from '@angular/core';
import { OdenSelectionInputBaseDirective } from '../oden-form-base-classes/oden-selection-input-base-directive';
import { INPUT_TYPE } from '../../../core/services/oden-form.service';

@Directive({
    selector: '[oden-checkbox]'
})
export class OdenCheckboxDirective extends OdenSelectionInputBaseDirective implements AfterViewInit {
    @HostBinding('class.oden-checkbox') _hasOdenCheckboxClass: boolean = true;
    @HostBinding('class.indeterminate') @Input() indeterminate: boolean = false;
    @Output() checkedChange = new EventEmitter<boolean>();

    ngAfterViewInit() {
        super.ngAfterViewInit();
        this._formService._inputType.next(INPUT_TYPE.CHECKBOX);
    }

    protected _onControlValueChange() {
        this._ngControl.control.setValue(!this._ngControl.control.value);
    }

    protected _onValueChange() {
        this.checkedChange.emit(!this.checked);
    }
}
