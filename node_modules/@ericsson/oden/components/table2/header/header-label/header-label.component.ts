import {
    ChangeDetectionStrategy,
    ChangeDetectorRef,
    Component,
    Input,
    OnChanges,
    SimpleChanges
} from '@angular/core';
import { Subject } from 'rxjs';

@Component({
    selector: 'oden-table-header-label',
    templateUrl: './header-label.component.html',
    styleUrls: ['./header-label.component.scss'],
    changeDetection: ChangeDetectionStrategy.OnPush
})
export class TableHeaderLabelComponent implements OnChanges {
    @Input() label: string;
    private _onLabelChanged$ = new Subject<string>();
    _onLabelChanged = this._onLabelChanged$.asObservable();

    constructor(private _changeDetector: ChangeDetectorRef) {}

    ngOnChanges(changes: SimpleChanges) {
        if (changes['label']) {
            this._onLabelChanged$.next(this.label);
            if (!changes['label'].firstChange) {
                this._changeDetector.detectChanges();
            }
        }
    }
}
