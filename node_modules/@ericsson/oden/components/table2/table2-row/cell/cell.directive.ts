import {
    Directive,
    Inject,
    forwardRef,
    HostBinding,
    ChangeDetectorRef,
    Input,
    SimpleChanges,
    OnChanges,
    OnDestroy,
    OnInit,
    EventEmitter,
    Output,
    HostListener,
    ElementRef
} from '@angular/core';
import { Table2Component } from '../../table.component';
import { HeaderComponent } from '../../header/header.component';
import { CELL_ALIGNMENT } from '../../../../core/constants';
import { Subscription } from 'rxjs';
import { TableHelper } from '../../table.helper';
import { Row2Component } from '../row.component';
import { IRowClickEvent } from '../../events.interfaces';

@Directive({
    // tslint:disable-next-line:directive-selector
    selector: 'td[odenCell]',
    host: { class: 'oden-cell' }
})
export class CellDirective implements OnInit, OnChanges, OnDestroy {
    @HostBinding('class.align-left')
    _isAlignedLeft = true;
    @HostBinding('class.align-right')
    _isAlignedRight = false;
    @HostBinding('class.align-center')
    _isAlignedCenter = false;
    @HostBinding('class.show-full-text') @Input()
    showFullText = false;
    _index;
    _align: CELL_ALIGNMENT;
    _header: HeaderComponent;
    @Input()
    colspan: number | string = 1;

    @Input()
    exportString: string;

    @Output()
    onClick = new EventEmitter<IRowClickEvent>();

    private _subscriptions: Array<Subscription> = [];
    constructor(
        @Inject(forwardRef(() => Table2Component))
        private _table: Table2Component,
        @Inject(forwardRef(() => Row2Component))
        private _row: Row2Component,
        private _tableHelper: TableHelper,
        private _changeDetectorRef: ChangeDetectorRef,
        private _elementRef: ElementRef
    ) { }
    ngOnChanges(changes: SimpleChanges) {
        if (changes['colspan'] && !changes['colspan'].firstChange) {
            this._row._setCells();
        }
    }

    ngOnInit(): void {
        if (this._row._hasOnClickSubscribers || this.onClick.observers.length > 0) {
            this._row._activateDrillDownClass();
        }
    }
    @HostListener('click')
    onCellClick(): void {
        this._row._onCellClick(this);
        this.onClick.next({ row: this._row, cell: this });
    }
    _setIndex(index: number) {
        if (index !== this._index) {
            this._index = index;
            this._header = this._table._getHeaderComponent(this._index);
            if (this._header) {
                this._align = this._header.align;
                this._setAlignmentClass();
                this._unsubscribeToHeader();
                this._subscriptions.push(
                    this._header._onAlignmentChanged().subscribe(align => {
                        this._align = align;
                        this._setAlignmentClass();
                        this._changeDetectorRef.detectChanges();
                    })
                );
            }
        }
    }
    _unsubscribeToHeader(): void {
        this._subscriptions.forEach(subscription => {
            subscription.unsubscribe();
        });
    }
    _setAlignmentClass() {
        this._tableHelper._setAlignmentClass(this._align, this);
    }
    ngOnDestroy(): void {
        this._unsubscribeToHeader();
    }

    /**
     * Get cell content
     */
    _getExportText(): string {
        return this.exportString || this._elementRef.nativeElement.textContent;
    }
}
