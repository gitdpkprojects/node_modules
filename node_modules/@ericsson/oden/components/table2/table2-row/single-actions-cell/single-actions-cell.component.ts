import { AfterViewInit,
  Component,
  EventEmitter,
  forwardRef,
  Inject,
  Input,
  OnChanges,
  Output,
  SimpleChanges,
  ElementRef } from '@angular/core';
import { Subscription } from 'rxjs';
import { UnSub } from '../../../../core/classes';
import { ActionItem,
  Divider } from '../../../../core/models';
import { Row2Component } from '../row.component';
import { UUID } from '../../../../core/helpers';
import { TranslateService } from '@ngx-translate/core';

@Component({
  // tslint:disable-next-line:component-selector
  selector: 'td[odenSingleActionsCell]',
  templateUrl: './single-actions-cell.component.html',
  styleUrls: ['./single-actions-cell.component.scss'],
  host: { 'class': 'single-action row-click-disabled' }
})
@UnSub()
export class SingleActionsCellComponent implements AfterViewInit, OnChanges {

  @Input() actions: Array<ActionItem  | Divider> = [];
  private _inputActions: Array<ActionItem | Divider> = [];
  @Output() onAction = new EventEmitter<ActionItem>();
  private _moveAction: ActionItem;
  private _subscriptions: Array<Subscription> = [];
  _uuid = UUID.create();
  constructor (
    @Inject(forwardRef(() => Row2Component)) private _row: Row2Component,
    private _elementRef: ElementRef,
    private _translate: TranslateService
  ) { }

  ngAfterViewInit(): void {
    this.setMoveAction();

    this._subscriptions.push(this._row._indexCellComponentQueryList.changes.subscribe(() => {
      this.setMoveAction();
    }));
  }

  ngOnChanges(changes: SimpleChanges): void {
    if (changes['actions']) {
      this._inputActions = changes['actions'].currentValue;
    }
  }

  onActionClick(action: ActionItem): void {
    if (this._moveAction && this._row._indexCellComponentQueryList && this._row._indexCellComponentQueryList.first) {
      this._row._indexCellComponentQueryList.first._requestMoveRow(this._elementRef.nativeElement.firstElementChild);
    }
    this.onAction.emit(action);
  }

  setMoveAction(): void {
    if (this._row._indexCellComponentQueryList) {
      if (this._row._indexCellComponentQueryList.first) {
        this._translate.get([
          'ODEN.COMPONENTS.TABLE.MOVE_ROW'
      ]).subscribe((res) => {
        this._moveAction = new ActionItem({action: 'oden_move_row', label: res['ODEN.COMPONENTS.TABLE.MOVE_ROW']});
        if (this.actions && this.actions.length > 0) {
          this.actions.push(new Divider());
        }
        this.actions.push(this._moveAction);
      });
      } else {
        this.actions = this._inputActions;
      }
    }
  }
}
