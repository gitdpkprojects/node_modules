import {
    ChangeDetectionStrategy,
    Component,
    forwardRef,
    Inject,
    Input,
    OnInit,
    ChangeDetectorRef,
    SimpleChanges,
    OnChanges
} from '@angular/core';
import { Subscription } from 'rxjs';
import { UnSub } from '../../../../core/classes/subscription.decorator';
import { Row2Component } from '../row.component';
import { Table2Component } from '../../table.component';

@Component({
    selector: 'oden-table-row-child-count',
    templateUrl: './child-count.component.html',
    styleUrls: ['./child-count.component.scss'],
    changeDetection: ChangeDetectionStrategy.OnPush
})
@UnSub()
export class TableRowChildCountComponent implements OnInit, OnChanges {
    private _subscriptions: Array<Subscription> = [];
    _row: Row2Component;
    @Input()
    count: number;
    _displayCount: Number;
    constructor(
        @Inject(forwardRef(() => Row2Component)) _row: Row2Component,
        private _changeDetectorRef: ChangeDetectorRef,
        @Inject(forwardRef(() => Table2Component))
        private _table: Table2Component
    ) {
        this._row = _row;
    }

    ngOnInit() {
        this._subscriptions.push(
            this._row._onExpandChanged().subscribe(() => {
                this._setDisplayCount();

                this._changeDetectorRef.detectChanges();
            })
        );

        this._subscriptions.push(
            this._table._onRowComponentsChanged().subscribe(() => {
                this._setDisplayCount();

                this._changeDetectorRef.detectChanges();
            })
        );
        this._setDisplayCount();
    }

    ngOnChanges(changes: SimpleChanges) {
        if (changes['count']) {
            this._setDisplayCount();
        }
    }

    _setDisplayCount() {
        if (typeof this.count === 'undefined') {
            this._displayCount = this._row._childRows.length;
        } else {
            this._displayCount = this.count;
        }
    }
}
