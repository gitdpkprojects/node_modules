import {
    Component,
    Input,
    OnInit,
    Inject,
    forwardRef,
    EventEmitter,
    Output
} from '@angular/core';
import { Row2Component } from '../row.component';

@Component({
    // tslint:disable-next-line:component-selector
    selector: '[odenSelectCell]',
    templateUrl: './select-cell.component.html',
    host: { class: 'select' }
})
export class SelectCellComponent implements OnInit {
    constructor (
        @Inject(forwardRef(() => Row2Component)) private _row: Row2Component
    ) { }
    _selected = false;
    @Input()
    set selected(value: boolean) {
        if (value) {
            this.indeterminate = false;
        }
        if (this._selected !== value) {
            this.onChange.emit(value);

        }
        this._selected = value;
    }
    get selected(): boolean {
        return this._selected;
    }
    @Input()
    indeterminate = false;
    @Output()
    onChange = new EventEmitter<boolean>(true);
    @Output()
    onSelectedChanged = new EventEmitter<boolean>(true);
    _rowUuid: string;
    ngOnInit(): void {
        this._rowUuid = this._row._rowUuid;
        this._row._selected = this.selected;
    }
    toggleSelectValue() {
        this._setSelected(this.selected = !this.selected);
    }

    _setSelected(selected: boolean) {
        this.selected = selected;
        this.onSelectedChanged.emit(selected);
    }
}
