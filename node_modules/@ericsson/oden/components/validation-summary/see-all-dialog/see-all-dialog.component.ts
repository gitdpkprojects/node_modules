import { Component, ViewChild, OnDestroy, ViewEncapsulation, HostBinding } from '@angular/core';
import { ICustomDialog } from '../../../core/interfaces';
import { ValidationSummaryItem } from '../../../core/models/validation-summary-item.model';
import { Subject, Observable } from 'rxjs';

@Component({
    selector: 'cui-validation-summary-see-all-dialog',
    templateUrl: 'see-all-dialog.component.html',
    styleUrls: ['see-all-dialog.component.scss'],
    encapsulation: ViewEncapsulation.None
})
export class SeeAllDialogComponent implements ICustomDialog, OnDestroy {
    @HostBinding('class.cui-validation-summary-see-all-dialog') addClass: boolean = true;
    @ViewChild('titleTemplate') titleTemplate;
    _title: string;
    _icon: string;
    _items: Array<ValidationSummaryItem> = [];
    _onClose$: Observable<void>;
    _onGoTo$: Observable<ValidationSummaryItem>;
    private _onCloseSubject: Subject<void>;
    private _onGoToSubject: Subject<ValidationSummaryItem>;

    constructor() {
        this._onCloseSubject = new Subject();
        this._onGoToSubject = new Subject();
        this._onClose$ = this._onCloseSubject.asObservable();
        this._onGoTo$ = this._onGoToSubject.asObservable();
    }

    ngOnDestroy(): void {
        this._onCloseSubject.complete();
        this._onGoToSubject.complete();
    }

    _close(): void {
        this._onCloseSubject.next();
    }

    _goTo(item: ValidationSummaryItem): void {
        this._onGoToSubject.next(item);
    }
}
