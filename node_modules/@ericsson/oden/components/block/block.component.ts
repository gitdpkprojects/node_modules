import {
    Component, ViewEncapsulation, HostBinding, EventEmitter, Input, Output, ElementRef,
    AfterViewInit, Renderer2
} from '@angular/core';

import { ActionItem } from '../../core/models';
import { IFocusShiftBlock } from '../modal/focus-shift/focus-shift-block.interface';

@Component({
    selector: 'cui-block',
    templateUrl: 'block.component.html',
    styleUrls: ['block.component.scss'],
    encapsulation: ViewEncapsulation.None
})

export class BlockComponent implements IFocusShiftBlock, AfterViewInit {
    @HostBinding('class.cui-block') addClass: boolean = true;
    @Input() actions: Array<ActionItem> = [];
    @Output() onActionClick: EventEmitter<ActionItem> = new EventEmitter<ActionItem>();
    @Output() click: EventEmitter<any> = new EventEmitter<any>();
    elementRef: ElementRef;

    constructor(_element: ElementRef, private _renderer: Renderer2) {
        this.elementRef = _element;
    }

    ngAfterViewInit() {
        if (this.click.observers.length > 0) {
            this._renderer.addClass(this.elementRef.nativeElement, 'clickable');
        }
    }

    /**
     * Action dispatcher for onActionClick
     * @param actionItem
     */
    actionClick(actionItem: ActionItem): void {
        this.onActionClick.emit(actionItem);
    }
}
