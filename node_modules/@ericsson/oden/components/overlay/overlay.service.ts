import { Injectable, ViewContainerRef } from '@angular/core';
import { OVERLAY_CONTEXT } from './overlay.constants';
import { Observable, Subject } from 'rxjs/Rx';

@Injectable()
export class OverlayService {
    private _overlayContainerRef: ViewContainerRef;
    private _overlayAppContainerRef: ViewContainerRef;
    private _zIndex: number = 100;
    public onZIndexChange$: Observable<number>;
    private _zIndexSubject: Subject<number>;

    constructor() {
        this._zIndexSubject = new Subject<number>();
        this.onZIndexChange$ = this._zIndexSubject.asObservable();
    }

    /**
     * Returns overlay view ref depending on BACKDROP enum value
     * @param overlay
     * @returns {ViewContainerRef}
     */
    getOverlay(overlay: OVERLAY_CONTEXT): ViewContainerRef {
        switch (overlay) {
            case OVERLAY_CONTEXT.ROOT:
                return this.containerRef;
            case OVERLAY_CONTEXT.APP:
                return this.appContainerRef;
        }
    }
    /**
     * Sets the overlay container ref
     * @param ref
     */
    set containerRef(ref: ViewContainerRef) {
        this._overlayContainerRef = ref;
    }

    /**
     * Returns the overlay container ref
     * @return {ViewContainerRef}
     */
    get containerRef(): ViewContainerRef {
        if (this._overlayContainerRef === undefined) {
            throw new Error(`
                Overlay container ref has not been declared. Please set overlay container ref
                in your root component. Read documentation for Overlay Service for more info
            `);
        }
        return this._overlayContainerRef;
    }

    /**
     * Sets the overlay container ref for application overlay
     * @param ref
     */
    set appContainerRef(ref: ViewContainerRef) {
        this._overlayAppContainerRef = ref;
    }

    /**
     * Returns the overlay container ref for application overlay
     * @return {ViewContainerRef}
     */
    get appContainerRef(): ViewContainerRef {
        if (this._overlayAppContainerRef === undefined) {
            throw new Error(`
                Overlay container ref has not been declared. Please set overlay container ref
                in your root component. Read documentation for Overlay Service for more info
            `);
        }
        return this._overlayAppContainerRef;
    }

    /**
     * Returns a new zIndex, 10 units higher then the previous.
     * @returns {number}
     */
    get zIndex(): number {
        this._zIndex += 10;
        this._zIndexSubject.next(this._zIndex);
        return this._zIndex;
    }

    /**
     * Returns the current highest zIndex + 10, ensuring we get the highest zIndex
     * @returns {number}
     */
    get highestZindex(): number {
        return this._zIndex + 10;
    }
}
