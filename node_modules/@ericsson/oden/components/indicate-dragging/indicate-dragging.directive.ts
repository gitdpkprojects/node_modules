import { Directive, HostBinding, ElementRef, OnInit } from '@angular/core';

@Directive({
    selector: '[cui-indicate-dragging]'
})

export class IndicateDraggingDirective implements OnInit {
    @HostBinding('style.display')
    get _display(): string {
        return this._draggableElement && this._draggableElement.classList.contains(this._isDraggableClass) ? undefined : 'none';
    }
    private _draggableElement: Element;
    private _isDraggableClass: string;

    constructor(private _elementRef: ElementRef) {
    }

    ngOnInit(): void {
        this._draggableElement = this._elementRef ? this._findDraggableElement(this._elementRef.nativeElement) : undefined;
        if (this._draggableElement) {
            if (this._draggableElement.classList.contains('cui-draggable')) {
                this._isDraggableClass = 'dragging-enabled';
            } else if (this._draggableElement.classList.contains('cui-draggable2')) {
                this._isDraggableClass = 'is-draggable';
            } else {
                this._draggableElement = undefined;
            }
        }
    }

    private _findDraggableElement(element: Element): Element {
        if (!element) {
            return undefined;
        } else if (element.classList.contains('cui-draggable')) {
            return element;
        } else if (element.classList.contains('cui-draggable2')) {
            return element;
        } else if (element.parentElement && element.parentElement !== document.documentElement) {
            return this._findDraggableElement(element.parentElement);
        } else {
            return undefined;
        }
    }
}
