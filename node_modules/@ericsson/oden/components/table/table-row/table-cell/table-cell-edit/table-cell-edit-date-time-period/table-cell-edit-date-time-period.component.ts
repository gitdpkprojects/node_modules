import { Component, HostBinding, Input, OnInit, ViewEncapsulation } from '@angular/core';
import { TableCellEditComponent } from '../table-cell-edit.component';
import { TABLE_CELL_EDIT } from '../table-cell-edit.animations';
import * as _ from 'lodash';

@Component({
    selector: 'cui-table-cell-edit-date-time-period',
    templateUrl: './table-cell-edit-date-time-period.component.html',
    encapsulation: ViewEncapsulation.None,
    animations: [TABLE_CELL_EDIT.ANIMATION]
})

export class TableCellEditDateTimePeriodComponent extends TableCellEditComponent implements OnInit {
    @HostBinding('class.cui-table-cell-edit-date-time-period') addClass: boolean = true;
    @Input() editData: { from: Date, to: Date } = null;
    @Input() editOptions: { showSeconds?: boolean, showPicker?: boolean, text?: string };
    private _editedData;

    ngOnInit() {
        this.editData = this.editData || {from: new Date(), to: new Date()};
        this._editedData = _.cloneDeep(this.editData);
        this.editOptions = this.editOptions || {showSeconds: false, showPicker: true, text: 'to'};
    }

    /**
     * Emits onFieldEvent event when a field is blurred
     * @param value
     * @param element
     * @param field
     */
    onBlur(value: any, element: Element, field?: string) {
        this._editedData[field] = value;
        super.onBlur(this._editedData, element);
    }

    /**
     * Emits onFieldFocus event when a field is focused
     * @param value
     * @param element
     * @param field
     */
    onFocus(value: any, element: Element, field?: string) {
        this._editedData[field] = value;
        super.onFocus(this._editedData, element);
    }

    /**
     * Emits onFieldChange event when a field is changed
     * @param value
     * @param element
     * @param field
     */
    onChange(value: any, element: Element, field?: string) {
        this._editedData[field] = value;
        super.onChange(this._editedData, element);
    }
}
