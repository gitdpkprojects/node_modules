import { EventEmitter, Injectable } from '@angular/core';
import { ITableRowData } from '../../core/interfaces/table-row-data.interface';
import * as _ from 'lodash';

@Injectable()
export class TableService {
    tableIsNew = true;
    onEditableChange: EventEmitter<boolean> = new EventEmitter<boolean>();
    onRowDestroy: EventEmitter<null> = new EventEmitter<null>();
    onNewRow: EventEmitter<null> = new EventEmitter<null>();
    onSelectRow: EventEmitter<ITableRowData> = new EventEmitter<ITableRowData>();

    private _editableRows: Array<ITableRowData> = [];

    updateEditableRows(row: ITableRowData) {
        if (row.edit === false && _.includes(this._editableRows, row)) {
            _.remove(this._editableRows, row);
            if (this._editableRows.length === 0) {
                this.onEditableChange.emit(false);
            }
        } else if (row.edit === true && !_.includes(this._editableRows, row)) {
            if (this._editableRows.length === 0) {
                this.onEditableChange.emit(true);
            }
            this._editableRows.push(row);
        }
    }

    newRowAdded(): void {
        this.onNewRow.emit();
    }

    rowDestroyed(): void {
        this.onRowDestroy.emit();
    }

    rowChecked(row: ITableRowData): void {
        this.onSelectRow.emit(row);
    }
}
