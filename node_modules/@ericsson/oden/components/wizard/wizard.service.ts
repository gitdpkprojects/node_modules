import { Subject, Observable } from 'rxjs';
import { Injectable } from '@angular/core';

@Injectable()
export class WizardService {
    // Observable string sources
    private _previousStepSource = new Subject();
    private _nextStepSource = new Subject();
    private _stepChangedSource = new Subject<number>();

    // Observable string streams
    previousStep$: Observable<any> = this._previousStepSource.asObservable();
    nextStep$: Observable<any> = this._nextStepSource.asObservable();
    stepChanged$: Observable<any> = this._stepChangedSource.asObservable();

    /**
     * Emits event for changing step to index, is used by child components.
     * @param index
     */
    changeStep(index: number) {
        this._stepChangedSource.next(index);
    }

    /**
     * Emits previous step, is called by child components
     */
    previousStep() {
        this._previousStepSource.next();
    }

    /**
     * Emits next step event, is used by child components
     */
    nextStep() {
        this._nextStepSource.next();
    }
}
