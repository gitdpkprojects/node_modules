import { Component, ElementRef, HostBinding, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';

@Component({
    selector: 'cui-list-view',
    templateUrl: 'list-view.component.html',
    styleUrls: ['list-view.component.scss'],
    encapsulation: ViewEncapsulation.None
})
export class ListViewComponent implements OnChanges {
    @HostBinding('class.cui-list-view') addClass: boolean = true;
    @HostBinding('class.multi-line') @Input() multiline: boolean = false;
    @HostBinding('class.small') @Input() iconLabels: boolean = false;
    @Input() labelWidth?: number;

    constructor(public element: ElementRef) {}

    ngOnChanges(changes: SimpleChanges): void {
        if (changes['labelWidth'] && changes['labelWidth'].currentValue !== changes['labelWidth'].previousValue) {
            setTimeout(() => {
                [].map.call(this.element.nativeElement.querySelectorAll('.cui-list-view-label'), (el) => {
                    el.style.width = this.labelWidth ? `${this.labelWidth}%` : null;
                });
                [].map.call(this.element.nativeElement.querySelectorAll('.cui-list-view-value'), (el) => {
                    el.style.width = this.labelWidth ? `${100 - this.labelWidth}%` : null;
                });
            }, 1);
        }
    }
}
