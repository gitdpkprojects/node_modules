import {ElementRef, EventEmitter, ComponentRef, HostBinding, Renderer2, Renderer} from '@angular/core';
import { IModal } from './modal.interface';
import { BackdropComponent}  from '../backdrop/backdrop.component';

export class ModalBase implements IModal {
    backdrop: ComponentRef<BackdropComponent>;
    onClose: EventEmitter<IModal>;
    onOpen: EventEmitter<IModal>;
    isOpen: boolean = false;

    @HostBinding('style.z-index') zIndex: number;

    constructor(public element: ElementRef, public renderer: Renderer2|Renderer|any) {}

    close(): void {
        this.isOpen = false;
        this.onClose.emit(this);
    }

    /**
     * Opens the modal base component
     */
    open(): void {
        this.onOpen.emit(this);
        this.isOpen = true;
        this.zIndex = this.backdrop.instance.zIndex + 1;
        if (this.element) {
            setTimeout(() => {
                if (typeof(this.renderer.setStyle) !== 'undefined') {
                    // Renderer2 API
                    this.renderer.addClass(this.element.nativeElement, 'fade-in');
                } else {
                    console.warn('Deprecation warning! Use Renderer2 in ModalBase.open');
                    // Renderer API
                    // ToDo this part will be removed later
                    this.renderer.setElementClass(this.element.nativeElement, 'fade-in', true);
                }
                this.element.nativeElement.style.zIndex = this.zIndex;
                this.element.nativeElement.focus();
            }, 100);
        }
    }
}
