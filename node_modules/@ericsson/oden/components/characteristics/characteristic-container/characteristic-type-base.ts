import { Input, TemplateRef, ViewChild } from '@angular/core';
import { CharacteristicService } from './characteristic.service';
import { CharacteristicValue } from '../../../core/models/characteristic-value.model';
import { TranslateService } from '@ngx-translate/core';

export class CharacteristicTypeBase {

    @Input() title: string;
    @Input() data: Array<CharacteristicValue>;
    @ViewChild('singleViewTemplate') singleViewTemplate: TemplateRef<any>;
    @ViewChild('multiViewTemplate') multiViewTemplate: TemplateRef<any>;
    viewTemplate: TemplateRef<any>;
    value: string = '';

    constructor(public characteristicService: CharacteristicService,
        private translate: TranslateService) {
        this.translate.stream('ODEN.COMMON.VALUE').subscribe(value => this.value = value);
    }

    triggerView() {
        this.viewTemplate = this.singleViewTemplate;

        if (this.characteristicService.characteristic.isMultiValued()) {
            this.viewTemplate = this.multiViewTemplate;
        }
    }

}
